@model WebLeagueManager.Views.Home.RankingsModel
@{
}

<br />
<h2>Clasificaciones</h2>
<section>
    <select id="competition_select" title="Escoge una competición">
        <option selected disabled>Escoge una competición</option>
        @foreach (Competition item in Model.competitions)
        {
            <option value="@item.ID">@item.Name</option>
        }
    </select>
    <div id="ranking">

    </div>
</section>

<script defer>

    const competitions = @Html.Raw(Model.getRankings());
    const jsonStringCompetitions = JSON.stringify(competitions);
    const jsonObjCompetitions = JSON.parse(jsonStringCompetitions);
    const rankingSpace = document.getElementById("ranking");
    var tableRanking;
    var tableBodyRanking;
    const competitionSelect = document.getElementById("competition_select");
    var clickableRows = document.querySelectorAll(".clickable_row");

    setClickableRows()

    competitionSelect.addEventListener("change", () => {

        const selectedComp = competitionSelect.value;
        const rankingArray = readRankingById(selectedComp, jsonStringCompetitions)

        if(rankingArray.type == "League") {
            drawTable(rankingArray.rankingTeams)
            setClickableRows()
        }
        else {

        }
    });

    

    function setClickableRows()
    {
        clickableRows = document.querySelectorAll(".clickable_row")
        for (var i = 0; i < clickableRows.length; i++) {
            (function (index) {
                clickableRows[index].addEventListener('click', function () {
                    openTeamById(clickableRows[index].id);
                });
            })(i);
        }
    }
    

    function openTeamById(id) 
    {
        var url = "/Home/Team?id="+id
        window.open(url,"_self")
    }

    function readRankingById(competitionId, jsonData) {
        var data = JSON.parse(jsonData)
        for (let i=0; i<data.length ; i++){
            if (data[i].id_competition == competitionId) {
                return data[i];
            }
        }

        return null
    }

    function drawTable(rankingTeams)
    {
        while(rankingSpace.firstChild){
            rankingSpace.removeChild(rankingSpace.firstChild)
        }
        tableRanking = document.createElement("table")
        tableRanking.id = "table_ranking"
        tableRanking.className = "table"

        tableBodyRanking = document.createElement("tbody")
        tableBodyRanking.id = "tablebody_rankings"
        tableBodyRanking.className = "ranking"

        createTable(tableRanking, tableBodyRanking);
        

        for(let i=0; i<rankingTeams.length; i++)
        {
            const rankingTeamsRow = rankingTeams[i];
            var newRowAux = newRow(rankingTeamsRow)
            tableBodyRanking.appendChild(newRowAux)
        }

        rankingSpace.appendChild(tableRanking)
    }

    function createTable(tableRanking, tableBodyRanking) {
        const tableHeader = document.createElement("thead");
        const headerRow = document.createElement("tr");
        const titlesArray = ["Pos","Equipo","PJ","PG","PE","PP","GF","GC","DG","Puntos"]
        for(let i=0;i<titlesArray.length;i++){
            var tittle = document.createElement("th");
            tittle.innerText = titlesArray[i]
            headerRow.appendChild(tittle)
        }
        tableHeader.appendChild(headerRow)
        tableRanking.appendChild(tableHeader);
        tableRanking.appendChild(tableBodyRanking);
    }

    function newRow(rankingTeamsRow) {
        var newRow = document.createElement("tr");
        newRow.id = rankingTeamsRow.team.Id;
        newRow.className = "clickable_row";
        var statsArray = [
            rankingTeamsRow.Pos,
            rankingTeamsRow.team.Name,
            rankingTeamsRow.gamesPlayed,
            rankingTeamsRow.victories,
            rankingTeamsRow.draws,
            rankingTeamsRow.defeats,
            rankingTeamsRow.goals,
            rankingTeamsRow.goalsAgainst,
            rankingTeamsRow.goals - rankingTeamsRow.goalsAgainst,
            rankingTeamsRow.points
        ]
        for (let i=0;i<statsArray.length;i++){
            var cell = document.createElement("td");
            cell.innerText = statsArray[i]
            newRow.appendChild(cell)
        }
        return newRow
    }

</script>



<style>
    .ranking tr:hover {
        background-color: rgb(45, 44, 44);
        color: white;
        cursor: pointer;
        transition: .2s;
    }
</style>